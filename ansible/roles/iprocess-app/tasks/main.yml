---
# Check or create users and groups

- name: Create user groups
  group:
    name: '{{ item.group | default(item.name)}}'
    gid: '{{ item.gid | default(omit)}}'
    state: present
  with_items: '{{ users }}'

- name: Create users
  user:
    name: "{{ item.name }}"
    groups: "{{ item.group | default(omit) }}"
    create_home: "{{ item.create_home | default('yes') }}"
    state: present
  loop: "{{ users }}"

# Enable cron and disable password expiry for users
- name: Enable crontab for EWF user
  lineinfile:
    dest: "/etc/cron.allow"
    line: "{{ item.name }}"
    regexp: "^{{ item.name }}"
  loop: "{{ users }}" 

- name: Disable password expiry for users so it doesnt break cron
  command: "chage -m 0 -M 99999 -I -1 -E -1 {{ item.name }}"
  loop: "{{ users }}" 

# Set SELinux in permissive
- name: Set SELinux to permissive
  ansible.posix.selinux:
    policy: "{{ item.policy | default(omit) }}"
    state: "{{ item.state }}"
  with_items: "{{ selinux_status }}"

# Copy jinja templates over to be populated at build time
- name: Copy TNS Names template to correct location
  copy:
    src: "{{ item }}"
    dest: "{{ app_user_home_path }}/{{ item }}"
  loop:
    - tnsnames.j2
    - staff_dat.j2

# Update local postfix to use mail relay
- name: Update Postfix configuration for mail relay (existing commented lines)
  lineinfile:
    dest: "/etc/postfix/{{ postfix_main_config_file }}"
    line: "{{ item.key }} = {{ item.value }}"
    regexp: "^#{{ item.key }} ="
    insertafter: "^#{{ item.key }} ="
  with_items: "{{ postfix_config }}"

- name: Update Postfix network config (existing uncommented lines)
  lineinfile:
    dest: "/etc/postfix/{{ postfix_main_config_file }}"
    line: "{{ item.key }} = {{ item.value }}"
    regexp: "^{{ item.key }} ="
  with_items: "{{ postfix_net_config }}"

# Setting swap
- name: Format swap volume
  command: "mkswap /dev/nvme1n1"
  when: swap_volume_enabled | bool

- name: Add swap volume to filesystem table
  mount:
    path: swap
    src: "/dev/nvme1n1"
    fstype: swap
    opts: defaults
    state: present
  when: swap_volume_enabled | bool