---  
- name: Deployment
  hosts: localhost
  gather_facts: true
  become: true
  collections:
    - ch_collections.base
  vars:
    ansible_remote_tmp: "/tmp"
    app_user_home_path: "/home/swenvp1"
    csi_folder_s3_prefix: "iprocess-configs/csi-folder/"
    csi_folder_local_path: "/app/iProcess/11_8/csi"
    csi_folder_owner: "swenvp1"
    csi_folder_group: "staffware"
    swadmin_crontab_user: "swadmin"
    swadmin_crontab_file: "crontab-swadmin.txt"
    swadmin_crontab_dir: "/app/iProcess/11_8/csi"
    eaiJavaSettings:
      - key: eaijava.db_connection
        value: "jdbc:oracle:thin:@{{ DB_ADDRESS }}:{{ DB_PORT }}:{{ ORACLE_SID_VALUE }}"
      - key: eaijava.db_user
        value: "{{ EAI_DB_USER }}"
      - key: eaijava.db_password
        value: "{{ EAI_DB_PASS }}"
      - key: eaijava.db_schemaowner
        value: "{{ EAI_DB_SCHEMAOWNER }}"
    staffwareToJava:
      - key: computerName
        value: "{{ HOSTNAME }}"
      - key: tcpPort
        value: "{{ APP_TCP_PORT }}"
      - key: ipAddress
        value: "{{ ansible_facts['all_ipv4_addresses'][0] }}"
  roles:
    - name: ch_collections.base.cloudwatch_agent_config
      when: cw_log_files is defined or cw_collect_metrics is defined
  tasks:
    - name: Set Hostname (1/2)
      ansible.builtin.lineinfile:
        line: "{{ item }} {{ HOSTNAME }}.{{ DOMAIN }} {{ HOSTNAME }}"
        regex: "^{{ item | regex_escape() }}.*$"
        path: "/etc/hosts"
      loop:
        - "{{ ansible_facts['all_ipv4_addresses'] }}"

    - name: Set Hostname (2/2)
      ansible.builtin.hostname:
        name: "{{ HOSTNAME }}.{{ DOMAIN }}"
        use: systemd

    - name: Set ORACLE_SID environment variable
      lineinfile:
        path: "{{ app_user_home_path }}/.bash_profile"
        line: "export ORACLE_SID={{ ORACLE_SID_VALUE }}"

    - name: Setup EAI Java Plugin
      lineinfile:
        path: "/app/iProcess/11_8/eaijava/eaijavaplugin.properties"
        line: "{{ item.key }}={{ item.value }}"
        regexp: "(^{{ item.key }}=)(.*)$"
      with_items: "{{ eaiJavaSettings }}"

    - name: Setup StaffwareToJava Properties
      lineinfile:
        path: "/app/iProcess/11_8/eaijava/libs/repository/user/staffwareToJava.properties"
        line: "{{ item.key }}={{ item.value }}"
        regexp: "(^{{ item.key }}=)(.*)$"
      with_items: "{{ staffwareToJava }}"

    - name: Add Oracle SID to iprocess app settings
      replace:
        path: "/app/iProcess/11_8/etc/staffpms"
        replace: '3\\swpro\\swuser\\swpro\\{{ ORACLE_SID_VALUE }}\\10\\0'
        regexp: '(^3\\swpro\\swuser\\swpro)(.*)$'

    - name: Download the crontab schedule from S3
      aws_s3:
        bucket: "{{ s3_bucket_configs }}"
        object: "iprocess-configs/{{ crontab_filename | default('crontab.txt') }}"
        dest: "/app/iProcess/11_8/crontab.txt"
        mode: get

###
    - name: List objects under S3 prefix using AWS CLI
      ansible.builtin.command:
        cmd: aws s3api list-objects-v2 --bucket {{ s3_bucket_configs }} --prefix {{ csi_folder_s3_prefix }}
      register: s3_objects_raw
      environment:
        PATH: "{{ ansible_env.PATH }}:/usr/local/bin"

    - name: Parse S3 objects JSON
      ansible.builtin.set_fact:
        s3_objects: "{{ s3_objects_raw.stdout | from_json }}"

    - name: Extract S3 keys
      ansible.builtin.set_fact:
        s3_keys: "{{ s3_objects.Contents | map(attribute='Key') | list }}"

    - name: Filter out directory markers (keys ending with '/')
      ansible.builtin.set_fact:
        filtered_s3_keys: "{{ s3_keys | reject('regex', '.*/$') }}"

    - name: Create local directories (mirror S3 structure)
      ansible.builtin.file:
        path: "{{ csi_folder_local_path }}/{{ item | regex_replace('^' + csi_folder_s3_prefix, '') | dirname }}"
        state: directory
        owner: "{{ csi_folder_owner }}"
        group: "{{ csi_folder_group }}"
        mode: '0755'
      loop: "{{ filtered_s3_keys }}"
      when: filtered_s3_keys | length > 0

    - name: Download files using AWS CLI
      ansible.builtin.command:
        cmd: aws s3 cp s3://{{ s3_bucket_configs }}/{{ item }} "{{ csi_folder_local_path }}/{{ item | regex_replace('^' + csi_folder_s3_prefix, '') }}"
      loop: "{{ filtered_s3_keys }}"
      when: filtered_s3_keys | length > 0
      environment:
        PATH: "{{ ansible_env.PATH }}:/usr/local/bin"
      register: downloaded_files

    - name: Set owner, group, and permissions for downloaded files
      ansible.builtin.file:
        path: "{{ csi_folder_local_path }}/{{ item.item | regex_replace('^' + csi_folder_s3_prefix, '') }}"
        owner: "{{ csi_folder_owner }}"
        group: "{{ csi_folder_group }}"
        mode: '0644'
      loop: "{{ downloaded_files.results }}"
      when: item.changed
###
    - name: Set full path to crontab file
      ansible.builtin.set_fact:
        swadmin_crontab_file_path: "{{ swadmin_crontab_dir }}/{{ swadmin_crontab_file }}"

    - name: Check if crontab file exists
      ansible.builtin.stat:
        path: "{{ swadmin_crontab_file_path }}"
      register: swadmin_crontab_file_stat

    - name: Ensure crontab file permissions
      ansible.builtin.file:
        path: "{{ swadmin_crontab_file_path }}"
        owner: "{{ swadmin_crontab_user }}"
        #group: "{{ swadmin_crontab_user }}"
        mode: '0600'
      when: swadmin_crontab_file_stat.stat.exists

    - name: Get current crontab
      ansible.builtin.command: crontab -l
      become: yes
      become_user: "{{ swadmin_crontab_user }}"
      register: current_crontab
      ignore_errors: yes  # Ignore "no crontab" errors
      changed_when: false
      when: swadmin_crontab_file_stat.stat.exists

    - name: Read desired crontab file
      ansible.builtin.command: cat "{{ swadmin_crontab_file_path }}"
      register: desired_crontab
      changed_when: false
      when: swadmin_crontab_file_stat.stat.exists

    - name: Update crontab if content differs
      ansible.builtin.command: crontab "{{ swadmin_crontab_file_path }}"
      become: yes
      become_user: "{{ swadmin_crontab_user }}"
      when:
        - swadmin_crontab_file_stat.stat.exists
        - current_crontab.stdout != desired_crontab.stdout
###

    - name: Run iprocess RMI Daemon
      shell: sh /app/iProcess/11_8/bin/bootstrap.sh
      become: yes
      become_method: su
      become_flags: "--login"
      become_user: "{{ app_user_home_path | basename }}"

    # - name: Download scripts and cronfile
    #   ansible.builtin.git:
    #     repo: https://{{ GIT_TOKEN }}@github.com/{{ GIT_USER }}/companieshouse/chips-service-admin<repo_name>.git
    #     dest: /src/from-private-repo

    - name: Remove old packages and kernels
      ansible.builtin.shell: yum remove --oldinstallonly -y
